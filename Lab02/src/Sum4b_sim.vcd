$date
	Mon Mar 25 15:15:14 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Sum4b_tb $end
$scope module uut $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # cin $end
$var wire 1 $ cout $end
$var wire 1 % c3 $end
$var wire 1 & c2 $end
$var wire 1 ' c1 $end
$var wire 4 ( S [3:0] $end
$scope module Sum1 $end
$var wire 1 ) S $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 # cin $end
$var wire 1 ' cout $end
$upscope $end
$scope module Sum2 $end
$var wire 1 , S $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 ' cin $end
$var wire 1 & cout $end
$upscope $end
$scope module Sum3 $end
$var wire 1 / S $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 & cin $end
$var wire 1 % cout $end
$upscope $end
$scope module Sum4 $end
$var wire 1 2 S $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 % cin $end
$var wire 1 $ cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
04
03
12
11
00
0/
1.
1-
1,
1+
1*
0)
b1010 (
1'
1&
1%
0$
0#
b111 "
b11 !
$end
#1
0%
0,
1/
0'
0&
1)
b1101 (
12
0$
0+
0.
01
0-
10
13
b0 "
b1101 !
#2
1$
02
b100 (
0)
14
0*
b1000 "
b1100 !
#5
